{"version":3,"sources":["components/ShareModal/styles.js","components/ShareModal/index.js","pages/Settings/styles.js","pages/Settings/index.js"],"names":["styles","theme","closeButton","position","right","spacing","unit","top","color","palette","grey","ShareModal","memo","props","share","config","onClose","classes","react_default","a","createElement","Dialog_default","open","TransitionComponent","p","Slide_default","Object","assign","direction","keepMounted","aria-labelledby","DialogTitle_default","id","dialogTitle","IconButton_default","aria-label","className","onClick","Close_default","DialogActions_default","Button_default","variant","component","Link","href","concat","encodeURIComponent","url","text","title","toLowerCase","withStyles","layout","defineProperty","width","height","maxHeight","marginTop","breakpoints","up","containerWidth","paddingHorizontal","marginLeft","marginRight","Share","Plugins","Settings","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePushNotification","pushNotification","state","setState","onChangeDarkMode","asyncToGenerator","regenerator_default","mark","_callee","_this$props","onChange","isDarkMode","wrap","_context","prev","next","Storage","set","stop","onShare","_callee2","_context2","t0","showShareModal","onShareModalClose","_this$props2","_this$props2$theme","mainColor","Fragment","Header","components_ShareModal","List_default","ListItem_default","button","ListItemIcon_default","LiveTvTwoTone_default","ListItemText_default","primary","ListItemSecondaryAction_default","Switch_default","checked","Share_default","style","textDecoration","contactURL","target","rel","AddBox_default","Email_default","termsURL","Assignment_default","PureComponent","withTheme"],"mappings":"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","file":"static/js/11.19a3a8fa.chunk.js","sourcesContent":["const styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing.unit,\n    top: theme.spacing.unit,\n    color: theme.palette.grey[500]\n  }\n});\nexport default styles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Slide from '@material-ui/core/Slide';\nimport CloseIcon from '@material-ui/icons/Close';\nimport config from '../../config';\nimport styles from './styles';\n\nconst ShareModal = memo((props) => {\n  const { share } = config;\n  const { onClose, classes } = props;\n  return (\n    <Dialog\n      open\n      onClose={onClose}\n      TransitionComponent={p => <Slide direction=\"up\" {...p} />}\n      keepMounted\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {share.dialogTitle}\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"raised\" component={Link} href={`https://www.facebook.com/sharer.php?u=${encodeURIComponent(share.url)}&t=${encodeURIComponent(share.text)}`}>\n          Facebook\n        </Button>\n        <Button variant=\"raised\" component={Link} href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(share.text)}%20${encodeURIComponent(share.url)}&via=${share.title.toLowerCase()}`}>\n          Twitter\n        </Button>\n        <Button variant=\"raised\" component={Link} href={`whatsapp://send?text=${encodeURIComponent(share.text)}%20${encodeURIComponent(share.url)}`}>\n          Whatsapp\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nShareModal.propTypes = {\n  onClose: PropTypes.func,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(ShareModal);\n","const styles = theme => ({\n  layout: {\n    width: '100%',\n    height: '100%',\n    maxHeight: '100%',\n    marginTop: 70,\n    [theme.breakpoints.up(theme.containerWidth + theme.spacing.unit * 3 * 2)]: {\n      width: theme.containerWidth,\n      paddingHorizontal: 30,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  }\n});\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core/styles';\n// import MessageIcon from '@material-ui/icons/Message';\nimport EmailIcon from '@material-ui/icons/Email';\nimport ShareIcon from '@material-ui/icons/Share';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport LiveTvTwoToneIcon from '@material-ui/icons/LiveTvTwoTone';\nimport { Plugins } from '@capacitor/core';\nimport Header from '../../components/Header';\nimport ShareModal from '../../components/ShareModal';\nimport Storage from '../../utils/storage';\nimport styles from './styles';\nimport config from '../../config';\n\nconst { Share } = Plugins;\n\nclass Settings extends PureComponent {\n  static propTypes = {\n    classes: PropTypes.object,\n    theme: PropTypes.object,\n    onChange: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pushNotification: false,\n      showShareModal: false\n    };\n  }\n\n  onChangePushNotification = () => {\n    const { pushNotification } = this.state;\n    this.setState({ pushNotification: !pushNotification });\n  }\n\n  onChangeDarkMode = async () => {\n    const { onChange, theme: { isDarkMode } } = this.props;\n    await Storage.set('isDarkMode', !isDarkMode);\n    onChange();\n  }\n\n  onShare = async () => {\n    try {\n      await Share.share(config.share);\n    } catch (err) {\n      this.setState({ showShareModal: true });\n    }\n  }\n\n  onShareModalClose = () => this.setState({ showShareModal: false })\n\n  render() {\n    const { showShareModal } = this.state;\n    const { classes, theme: { isDarkMode, mainColor } } = this.props;\n    return (\n      <React.Fragment>\n        <Header title=\"Settings\" />\n        <main className={classes.layout}>\n          {showShareModal && <ShareModal onClose={this.onShareModalClose} />}\n          <List component=\"nav\">\n            {/* <ListItem button onClick={this.onChangePushNotification}>\n              <ListItemIcon>\n                <MessageIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Push notification\" />\n              <ListItemSecondaryAction>\n                <Switch\n                  color={mainColor}\n                  checked={pushNotification}\n                  onChange={this.onChangePushNotification}\n                />\n              </ListItemSecondaryAction>\n            </ListItem> */}\n            <ListItem button onClick={this.onChangeDarkMode}>\n              <ListItemIcon>\n                <LiveTvTwoToneIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dark mode\" />\n              <ListItemSecondaryAction>\n                <Switch\n                  color={mainColor}\n                  checked={isDarkMode}\n                  onChange={this.onChangeDarkMode}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem button onClick={this.onShare}>\n              <ListItemIcon>\n                <ShareIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Share app\" />\n            </ListItem>\n            <ListItem\n              button\n              component={Link}\n              style={{ textDecoration: 'none' }}\n              href={`${config.contactURL}?subject=Submit Newsletter`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <ListItemIcon>\n                <AddBoxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Submit newsletter\" />\n            </ListItem>\n            <ListItem\n              button\n              component={Link}\n              style={{ textDecoration: 'none' }}\n              href={config.contactURL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact us\" />\n            </ListItem>\n            <ListItem\n              button\n              component={Link}\n              style={{ textDecoration: 'none' }}\n              href={config.termsURL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <ListItemIcon>\n                <AssignmentIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Terms of service\" />\n            </ListItem>\n          </List>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Settings);\n"],"sourceRoot":""}