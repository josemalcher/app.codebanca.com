{"version":3,"sources":["config.js","utils/gaRoute.js","serviceWorker.js","theme.js","index.js","utils/storage.js","components/Header/styles.js","components/Header/index.js","components/Loading/styles.js","components/Loading/index.js","utils/api.js","services/newsletter.js"],"names":["_package_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","appName","pkg","name","apiURL","appVersion","version","isProduction","env","gaCode","contactURL","termsURL","share","title","text","url","dialogTitle","config","GARoute","_ref","Component","component","rest","Object","objectWithoutProperties","ReactGA","initialize","react_default","a","createElement","Route","assign","render","props","pathname","location","pageview","console","log","key","Boolean","window","hostname","match","theme","isDarkMode","arguments","length","undefined","createMuiTheme","palette","common","black","white","primary","light","main","dark","contrastText","type","typography","useNextVariants","containerWidth","mainColor","Home","lazy","Promise","all","e","then","bind","Settings","Newsletters","Issues","load","Page","onChange","p","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeDarkMode","setDarkModeState","loadNewsletters","asyncToGenerator","regenerator_default","mark","_callee","newsletters","wrap","_context","prev","next","NewsletterService","list","sent","Storage","set","t0","stop","_callee2","_context2","get","setState","state","styles","CssBaseline_default","BrowserRouter","react","fallback","Loading","Switch","gaRoute","exact","path","PureComponent","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","_Users_caio_Workspace_startups_cb_codebanca_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_caio_Workspace_startups_cb_codebanca_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","resolve","reject","_ref2","value","Plugins","abrupt","JSON","parse","_x","_x2","apply","_set","_callee3","_context3","_ref3","stringify","_x5","_x6","_x3","_x4","remove","_ref4","_callee4","_context4","_x7","_x8","clear","flexGrow","overflow","whiteSpace","textOverflow","menuLeft","marginLeft","marginRight","Header","memo","classes","backButton","AppBar_default","position","color","Toolbar_default","IconButton_default","className","onClick","ArrowBack_default","Link","to","Home_default","Typography_default","variant","Settings_default","withStyles","progress","margin","spacing","unit","middle","marginTop","Fragment","loading","index_es","container","direction","justify","alignItems","disableShrink","thickness","withTheme","axios","create","baseURL","headers","Content-Type","responseType","Newsletter","res","Api","data","listIssues","newsletterId","options","issues","params","join","getIssueContentById","id","concat"],"mappings":"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","file":"static/js/main.837fe42f.chunk.js","sourcesContent":["import pkg from '../package.json';\n\nconst env = process.env.NODE_ENV || 'development';\n\nconst apiURL = {\n  development: 'http://192.168.15.13:4000',\n  production: 'https://codebanca.mybluemix.net'\n}[env];\n\nexport default {\n  appName: pkg.name,\n  apiURL,\n  appVersion: pkg.version,\n  isProduction: env === 'production',\n  gaCode: 'UA-134219835-2',\n  contactURL: 'mailto:hello@codebanca.com',\n  termsURL: 'https://codebanca.com/terms-of-service',\n  share: {\n    title: 'Codebanca',\n    text: 'Codebanca a newsletter app for developers',\n    url: 'https://codebanca.com',\n    dialogTitle: 'Share with buddies'\n  }\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport config from '../config';\n\nconst { gaCode, isProduction } = config;\n\nconst GARoute = ({ component: Component, ...rest }) => {\n  if (isProduction) {\n    ReactGA.initialize(gaCode);\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const { pathname } = props.location;\n        if (isProduction) {\n          ReactGA.pageview(pathname);\n        } else {\n          console.log(pathname);\n        }\n        return <Component key={pathname} {...props} />;\n      }}\n    />\n  );\n};\n\nGARoute.propTypes = {\n  component: PropTypes.func,\n  location: PropTypes.object\n};\n\nexport default GARoute;\n","/* global window, navigator, fetch */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  || window.location.hostname === '[::1]'\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service');\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content is available and will be used when all');\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => window.location.reload());\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => console.log('No internet connection found. App is running in offline mode.'));\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => registration.unregister());\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = (isDarkMode = false) => {\n  return createMuiTheme({\n    palette: {\n      common: {\n        black: '#000',\n        white: '#fff'\n      },\n      primary: {\n        light: '#003244',\n        main: '#003244',\n        dark: '#002884',\n        contrastText: '#fff'\n      },\n      type: isDarkMode ? 'dark' : 'light'\n    },\n    typography: {\n      useNextVariants: true\n    },\n    containerWidth: 820,\n    mainColor: isDarkMode ? 'secondary' : 'primary',\n    isDarkMode\n  });\n};\n\nexport default theme;\n","/* global document */\nimport 'typeface-roboto';\nimport React, { lazy, PureComponent, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport GARoute from './utils/gaRoute';\nimport * as serviceWorker from './serviceWorker';\nimport Loading from './components/Loading';\nimport NewsletterService from './services/newsletter';\nimport Storage from './utils/storage';\nimport theme from './theme';\n\nconst Home = lazy(() => import('./pages/Home'));\nconst Settings = lazy(() => import('./pages/Settings'));\nconst Newsletters = lazy(() => import('./pages/Newsletters'));\nconst Issues = lazy(() => import('./pages/Issues'));\nconst load = (Page, onChange) => p => <Page {...p} onChange={onChange} />;\n\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDarkMode: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadNewsletters();\n    await this.setDarkModeState();\n  }\n\n  onChangeDarkMode = () => {\n    this.setDarkModeState();\n  }\n\n  loadNewsletters = async () => {\n    try {\n      const newsletters = await NewsletterService.list();\n      await Storage.set('newsletters', newsletters);\n    } catch (err) {\n      console.log('API IS OFFLINE!');\n    }\n  }\n\n  setDarkModeState = async () => {\n    try {\n      const isDarkMode = await Storage.get('isDarkMode');\n      this.setState({ isDarkMode: !!isDarkMode });\n    } catch (err) {\n      this.setState({ isDarkMode: false });\n    }\n  }\n\n  render() {\n    const { isDarkMode } = this.state;\n    return (\n      <MuiThemeProvider theme={theme(isDarkMode)}>\n        <CssBaseline />\n        <BrowserRouter>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <GARoute exact path=\"/\" component={load(Home)} />\n              <GARoute path=\"/newsletters\" component={load(Newsletters)} />\n              <GARoute path=\"/issues/:id\" component={load(Issues)} />\n              <GARoute path=\"/settings\" component={load(Settings, this.onChangeDarkMode)} />\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { Plugins } from '@capacitor/core';\n\nconst Storage = {\n  get(key) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { value } = await Plugins.Storage.get({ key });\n        return resolve(JSON.parse(value));\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  },\n  async set(key, value) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await Plugins.Storage.set({ key, value: JSON.stringify(value) });\n        return resolve(true);\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  },\n  remove(key) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await Plugins.Storage.remove({ key });\n        return resolve(true);\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  },\n  clear() {\n    return Plugins.Storage.clear();\n  }\n};\n\nexport default Storage;\n","const styles = () => ({\n  main: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  },\n  menuLeft: {\n    marginLeft: -10,\n    marginRight: 20\n  }\n});\n\nexport default styles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport styles from './styles';\n\nconst Header = memo((props) => {\n  const { title, classes, backButton } = props;\n  return (\n    <AppBar position=\"fixed\" color=\"primary\">\n      <Toolbar>\n        {\n          backButton ?\n            <IconButton className={classes.menuLeft} color=\"inherit\" onClick={backButton}>\n              <ArrowBackIcon />\n            </IconButton>\n            :\n            <IconButton className={classes.menuLeft} color=\"inherit\" component={Link} to=\"/\">\n              <HomeIcon />\n            </IconButton>\n        }\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.main}>\n          {title || 'Home'}\n        </Typography>\n        <IconButton color=\"inherit\" component={Link} to=\"/settings\">\n          <SettingsIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object,\n  backButton: PropTypes.func\n};\n\nexport default withStyles(styles)(Header);\n","const styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  middle: {\n    marginTop: 150\n  }\n});\n\nexport default styles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Header from '../Header';\nimport styles from './styles';\n\nconst Loading = memo((props) => {\n  const { classes, theme: { mainColor } } = props;\n  return (\n    <React.Fragment>\n      <Header loading />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.middle}\n      >\n        <CircularProgress\n          color={mainColor}\n          className={classes.progress}\n          variant=\"indeterminate\"\n          disableShrink\n          thickness={5}\n        />\n        <Typography variant=\"h6\">Carregando</Typography>\n      </Grid>\n    </React.Fragment>\n  );\n});\n\nLoading.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(Loading);\n","import axios from 'axios';\nimport config from '../config';\n\nexport default axios.create({\n  baseURL: config.apiURL,\n  headers: { 'Content-Type': 'application/json' },\n  responseType: 'json'\n});\n","import Api from '../utils/api';\n\nconst Newsletter = {\n  list() {\n    return new Promise(async (resolve) => {\n      try {\n        const res = await Api.get('/newsletters');\n        const newsletters = res.data || [];\n        return resolve(newsletters);\n      } catch (err) {\n        return resolve([]);\n      }\n    });\n  },\n  listIssues(newsletterId = '') {\n    return new Promise(async (resolve) => {\n      try {\n        const options = newsletterId ? { params: { newsletterId: newsletterId.join(',') } } : {};\n        const res = await Api.get('/newsletters/issues', options);\n        const issues = res.data || [];\n        return resolve(issues);\n      } catch (err) {\n        return resolve([]);\n      }\n    });\n  },\n  getIssueContentById(id) {\n    return new Promise(async (resolve) => {\n      try {\n        if (id) {\n          const res = await Api.get(`/newsletters/issues/${id}`);\n          return resolve(res.data);\n        }\n        return resolve({});\n      } catch (err) {\n        return resolve({});\n      }\n    });\n  }\n};\n\nexport default Newsletter;\n"],"sourceRoot":""}